name: Cleanup

on:
  schedule:
    - cron: '0 3 * * 0'  # –ö–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 3:00
  workflow_dispatch:

jobs:
  cleanup-artifacts:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    permissions:
      actions: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cleanup old artifacts
      run: |
        # –£–¥–∞–ª—è–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
        echo "Cleaning up old artifacts..."
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
        # –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ GitHub API:
        # gh api repos/:owner/:repo/actions/artifacts --paginate | jq '.artifacts[] | select(.created_at < "'$(date -d '30 days ago' -Iseconds)'") | .id' | xargs -I {} gh api repos/:owner/:repo/actions/artifacts/{} -X DELETE

    - name: Cleanup old releases
      run: |
        # –£–¥–∞–ª—è–µ–º prerelease –≤–µ—Ä—Å–∏–∏ —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
        echo "Cleaning up old prereleases..."
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö prerelease
        # gh api repos/:owner/:repo/releases | jq '.[] | select(.prerelease and .created_at < "'$(date -d '7 days ago' -Iseconds)'") | .id' | xargs -I {} gh api repos/:owner/:repo/releases/{} -X DELETE

  cleanup-branches:
    name: Cleanup Old Branches
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cleanup old branches
      run: |
        # –£–¥–∞–ª—è–µ–º –≤–µ—Ç–∫–∏ —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π (–∫—Ä–æ–º–µ main –∏ develop)
        echo "Cleaning up old branches..."
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–µ—Ç–æ–∫
        BRANCHES=$(git branch -r | grep -v "origin/main" | grep -v "origin/develop" | sed 's/origin\///')
        
        for branch in $BRANCHES; do
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–º–º–∏—Ç–∞
          LAST_COMMIT_DATE=$(git log -1 --format=%cd --date=iso origin/$branch)
          DAYS_OLD=$(( ( $(date +%s) - $(date -d "$LAST_COMMIT_DATE" +%s) ) / 86400 ))
          
          if [ $DAYS_OLD -gt 30 ]; then
            echo "Deleting old branch: $branch (last commit: $DAYS_OLD days ago)"
            # –£–¥–∞–ª—è–µ–º –≤–µ—Ç–∫—É
            # git push origin --delete $branch
          fi
        done

  cleanup-workflow-runs:
    name: Cleanup Old Workflow Runs
    runs-on: ubuntu-latest
    permissions:
      actions: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cleanup old workflow runs
      run: |
        # –£–¥–∞–ª—è–µ–º workflow runs —Å—Ç–∞—Ä—à–µ 90 –¥–Ω–µ–π
        echo "Cleaning up old workflow runs..."
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö workflow runs
        # gh api repos/:owner/:repo/actions/runs --paginate | jq '.workflow_runs[] | select(.created_at < "'$(date -d '90 days ago' -Iseconds)'") | .id' | xargs -I {} gh api repos/:owner/:repo/actions/runs/{} -X DELETE

  cleanup-cache:
    name: Cleanup Cache
    runs-on: ubuntu-latest
    permissions:
      actions: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cleanup cache
      run: |
        # –û—á–∏—â–∞–µ–º –∫—ç—à —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
        echo "Cleaning up old cache..."
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
        # gh api repos/:owner/:repo/actions/caches --paginate | jq '.actions_caches[] | select(.created_at < "'$(date -d '30 days ago' -Iseconds)'") | .id' | xargs -I {} gh api repos/:owner/:repo/actions/caches/{} -X DELETE

    - name: Report cleanup
      run: |
        echo "Cleanup completed successfully"
        echo "Date: $(date)"
        echo "Repository: ${{ github.repository }}"
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –æ –æ—á–∏—Å—Ç–∫–µ
        # curl -X POST -H 'Content-type: application/json' \
        #   --data "{\"text\":\"üßπ Cleanup completed for ${{ github.repository }}\"}" \
        #   ${{ secrets.SLACK_WEBHOOK_URL }}
